{"version":3,"sources":["vfx-codes lazy //.js$","../../src/editor/utils.js","../../src/editor/ENState.js","../../src/editor/firebase.js","../../src/editor/ENMethods.js","../../src/editor/ENHtmls.js","../../src/editor/ENControls.js","../../src/editor/ENCore.js","../../src/editor/ENDisplayCursor.js","../../src/editor/ENLink.js","../../src/editor/ENNode.js","../../src/editor/ENDisplayNodes.js","../../src/editor/ShaderCubeChrome.js","../../src/editor/EnvRender.js","../../src/editor/GraphEditorContent.js","../../src/editor/Resizer.js","../../src/auth/LoginPage.js","../../src/auth/CanvasChecker.js","../../src/cms/GraphEditorPage.js","../../src/auth/LoginChecker.js","../../src/projects/ENProjectAdd.js","../../src/projects/ENProjectListing.js","../../src/projects/ProjectListing.js","../../src/cms/ProjectListingPage.js","../../src/cms/CMSOnePage.js","OnePageDemo/OnePageDemo.js","GraphEditorPageDemo/GraphEditorPageDemo.js","ProjectListingPageDemo/ProjectListingPageDemo.js","App.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","getID","Math","ENState","myObject","___NameSpaceID","Utils","exportJSON","JSON","getNameSpcaeID","onChange","evName","hh","func","window","useReactiveKey","useEffect","makeKeyReactive","key","useState","setSt","s","onChangeAny","notifyKeyChange","CustomEvent","detail","proxy","Proxy","get","set","makeShallowStore","listing","listingReload","layouts","layoutsReload","canvasID","canvasOwnerID","overlay","cursorMode","hovering","draggingNodeID","draggingIOID","addNodeTitle","cursorAt","dragStartPos","moved","isDown","nodes","connections","currentEditSocketID","currentEditNodeID","firebaseConfig","FireCache","setupFirebase","FIREBASE","user","console","onReady","tt","setInterval","clearInterval","db","logout","a","firebase","addCodeBlock","point","newItem","nodeID","title","_id","position","inputs","type","outputs","saveCodeBlock","node","ref","removeCodeBlockByID","addLink","output","input","removeLinkByID","linkID","removeCurrentNodeAndConnections","nodeIDFire","conn","connIDs","ENMethods","ENHtml","codes","h","style","zIndex","top","left","width","backgroundColor","className","padding","fontSize","fontFamily","right","height","xmlns","fillRule","clipRule","fill","onClick","onPointerDown","cursor","d","MainPanel","nodesTemplates","marginLeft","marginBottom","textDecoration","NodePanel","useMemo","fireNodeID","inputLinks","outputLinks","borderColor","display","border","appearance","value","target","setTitle","i","t","localID","idx","socket","remoteNode","ev","_fid","reload","ENControls","camera","useThree","mapControls","useRef","syncCursor","document","eventsHandlers","onPointerUp","setTimeout","onPointerEnter","onPointerMove","passive","screenSpacePanning","args","fragmentShader","raycast","position-y","Laptop","props","group","useFrame","state","MathUtils","position-x","position-z","rotation-x","metalness","roughness","color","maxWidth","lineHeight","textAlign","anchorX","anchorY","outlineWidth","outlineColor","ENCore","fallback","ENDisplayCursor","gp","visible","getGeo","dotted","LineSegmentsGeometry","require","LineGeometry","raise","curvePts","b","lineGeo","colors","pos","temp","colorA","colorB","isNaN","ENDisplayConnectorWire","LineMaterial","Line2","lineMat","transparent","linewidth","opacity","dashed","vertexColors","works","mesh","cursorPos","needsUpdate","w","object","ENLink","link","scene","inputV3","outputV3","sig","inputO3","outputO3","MyIO","io","total","v3","v3b","theta","orbit","name","eventObject","onPointerLeave","res","pair","scan","userData","ENNode","arr","length","ENDisplayNodes","unsusbs","snap","val","data","kn","setNodes","ENDisplayLinks","setLinks","links","constructor","setup","this","texture","shader","uniforms","tEquirect","vertexShader","material","side","blending","NoBlending","format","generateMipmaps","magFilter","minFilter","LinearMipmapLinearFilter","time","resolution","diffuse","renderTargetPlane","computeEnvMap","renderer","envMap","renderTargetCube","EnvRender","rainbow","dt","GraphEditorContent","intensity","Resizer","setOKSize","three","resize","LoginPage","alignItems","justifyContent","done","LoginWithGoogle","borderRadius","provider","loginGoogle","CanvasChecker","cleans","clean","uid","setState","GraphEditorPage","ownerID","GraphEditorApp","waitGet","setOKFirebase","dpr","okFirebase","LoginChecker","children","ENProjectAdd","rows","margin","onInput","shareACL","placeholder","ENProjectListing","onEdit","listingRef","load","overflowX","colSpan","copy","newTitle","ProjectListing","ProjectListingPage","CMSOnePage","href","json","URLSearchParams","parsed","setSelected","calc","selected","pathname","encodeURIComponent","background","boxShadow","bottom","OnePageDemo","getCodes","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","path","r","forEach","filename","basename","push","loader","importAll","GraphEditorPageDemo","ProjectListingPageDemo","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3a9448c8.chunk.js","sourcesContent":["var map = {\n\t\"./lok.myFristNode.js\": [\n\t\t86,\n\t\t0,\n\t\t5\n\t],\n\t\"./lok.mySecondNode.js\": [\n\t\t87,\n\t\t0,\n\t\t4,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 57;\nmodule.exports = webpackAsyncContext;","import { useEffect, useState } from 'react'\n\nexport const getID = function () {\n  return (\n    '_' +\n    Math.random().toString(36).substr(2, 9) +\n    Math.random().toString(36).substr(2, 9)\n  )\n}\n\nexport const makeShallowStore = (myObject = {}) => {\n  let ___NameSpaceID = getID()\n  let Utils = {\n    exportJSON: () => {\n      return JSON.parse(JSON.stringify(myObject))\n    },\n    getNameSpcaeID: () => {\n      return ___NameSpaceID\n    },\n\n    onChange: (key, func) => {\n      let evName = `${___NameSpaceID}`\n      let hh = () => {\n        func(myObject[key])\n      }\n\n      window.addEventListener(`${evName}-${key}`, hh)\n      return () => {\n        window.removeEventListener(`${evName}-${key}`, hh)\n      }\n    },\n\n    useReactiveKey: (key, func) => {\n      useEffect(() => {\n        let evName = `${___NameSpaceID}`\n        let hh = () => {\n          func(myObject[key])\n        }\n\n        window.addEventListener(`${evName}-${key}`, hh)\n        return () => {\n          window.removeEventListener(`${evName}-${key}`, hh)\n        }\n      }, [])\n    },\n\n    makeKeyReactive: (key) => {\n      let [vv, setSt] = useState(0)\n      useEffect(() => {\n        let evName = `${___NameSpaceID}`\n\n        let hh = () => {\n          setSt((s) => {\n            return s + 1\n          })\n        }\n\n        window.addEventListener(`${evName}-${key}`, hh)\n        return () => {\n          window.removeEventListener(`${evName}-${key}`, hh)\n        }\n      }, [vv])\n    },\n\n    //\n    onChangeAny: (func) => {\n      let evName = `${___NameSpaceID}`\n      let hh = () => {\n        func(myObject[key])\n      }\n\n      window.addEventListener(`${evName}`, hh)\n      return () => {\n        window.removeEventListener(`${evName}`, hh)\n      }\n    },\n\n    notifyKeyChange: (key) => {\n      window.dispatchEvent(\n        new CustomEvent(`${___NameSpaceID}-${key}`, { detail: {} })\n      )\n    }\n  }\n\n  let proxy = new Proxy(myObject, {\n    get: (o, k) => {\n      //\n      if (Utils[k]) {\n        return Utils[k]\n      }\n\n      return o[k]\n    },\n    set: (o, key, val) => {\n      o[key] = val\n\n      if (typeof window !== 'undefined') {\n        window.dispatchEvent(\n          new CustomEvent(`${___NameSpaceID}-${key}`, { detail: {} })\n        )\n      }\n\n      return true\n    }\n  })\n\n  return proxy\n}\n","import { Vector3 } from 'three'\nimport { makeShallowStore } from './utils'\n\nexport const ENState = makeShallowStore({\n  listing: [],\n  listingReload: 0,\n\n  layouts: [],\n  layoutsReload: 0,\n\n  //\n  canvasID: false,\n  canvasOwnerID: false,\n\n  // overlay\n  overlay: '',\n\n  // position\n  cursorMode: 'ready',\n  hovering: 'floor',\n  draggingNodeID: false,\n  draggingIOID: false,\n  addNodeTitle: 'mytitle',\n\n  cursorAt: new Vector3(),\n  dragStartPos: new Vector3(),\n  moved: 0,\n  isDown: false,\n\n  nodes: [],\n  connections: [],\n\n  currentEditSocketID: false,\n  currentEditNodeID: false,\n\n  firebaseConfig: false\n})\n\nexport const waitGet = (key) => {\n  return new Promise((resolve) => {\n    let tt = setInterval(() => {\n      let value = ENState[key]\n      if (value) {\n        clearInterval(tt)\n        resolve(value)\n      }\n    })\n  })\n}\n","import FIREBASE from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n// import { waitGet } from './ENState'\n\nexport const FireCache = new Map()\nexport function setupFirebase({ firebaseConfig }) {\n  if (!FireCache.has('app')) {\n    FireCache.set('app', FIREBASE.initializeApp(firebaseConfig))\n  }\n\n  if (!FireCache.has('database')) {\n    FireCache.set('database', FIREBASE.database())\n  }\n\n  if (!FireCache.has('setup-listen-login')) {\n    FireCache.set('setup-listen-login', true)\n    FireCache.get('app')\n      .auth()\n      .onAuthStateChanged((user) => {\n        if (user) {\n          // User is signed in, see docs for a list of available properties\n          // https://firebase.google.com/docs/reference/js/firebase.User\n          FireCache.set('user', user)\n          // ...\n        } else {\n          // User is signed out\n          // ...\n          FireCache.delete('user')\n        }\n      })\n  }\n  if (!FireCache.has('setup-do-login')) {\n    FireCache.set('setup-do-login', true)\n\n    // FireCache.get(\"app\")\n    //   .auth()\n    //   .signInAnonymously()\n    //   .then((singin) => {\n    //     // Signed in..\n    //     FireCache.set(\"user\", singin.user);\n    //   })\n    //   .catch((error) => {\n    //     var errorCode = error.code;\n    //     var errorMessage = error.message;\n    //     // ...\n    //     console.log(errorCode, errorMessage);\n\n    //     return Promise.reject(new Error(errorMessage));\n    //   });\n    console.log('[Firebase]: done setup')\n  }\n\n  return FireCache.get('app')\n}\n\nexport const onReady = ({ firebaseConfig }) => {\n  return new Promise((resolve) => {\n    setupFirebase({ firebaseConfig })\n\n    let tt = setInterval(() => {\n      if (FireCache.has('user')) {\n        clearInterval(tt)\n        resolve({\n          user: FireCache.get('user'),\n          db: FireCache.get('database')\n        })\n      }\n    })\n  })\n}\n\nexport const loginGuest = async () => {\n  return FIREBASE.auth().signInAnonymously()\n}\n\nexport const logout = async () => {\n  return FIREBASE.auth().signOut()\n}\n\nexport const loginGoogle = () => {\n  var provider = new FIREBASE.auth.GoogleAuthProvider()\n  return FIREBASE.auth().signInWithPopup(provider)\n}\n\nexport const firebase = FIREBASE\n","import { getID } from './utils'\nimport { ENState } from './ENState'\nimport { firebase } from './firebase'\n\nexport class ENMethods {\n  static addCodeBlock({ point }) {\n    ENState.overlay = ''\n    ENState.cursorMode = 'ready'\n    ENState.hovering = 'floor'\n\n    let ref = firebase\n      .database()\n      .ref(`/canvas/${ENState.canvasID}/${ENState.canvasOwnerID}/nodes`)\n\n    let newItem = ref.push()\n\n    let nodeID = getID()\n    newItem.set({\n      title: ENState.addNodeTitle,\n      _id: nodeID,\n      position: point.toArray(),\n      inputs: [\n        //\n        { _id: getID(), type: 'input', nodeID },\n        { _id: getID(), type: 'input', nodeID },\n        { _id: getID(), type: 'input', nodeID },\n        { _id: getID(), type: 'input', nodeID },\n        { _id: getID(), type: 'input', nodeID }\n      ],\n      outputs: [\n        //\n        { _id: getID(), type: 'output', nodeID },\n        { _id: getID(), type: 'output', nodeID },\n        { _id: getID(), type: 'output', nodeID },\n        { _id: getID(), type: 'output', nodeID },\n        { _id: getID(), type: 'output', nodeID }\n      ]\n    })\n  }\n\n  static saveCodeBlock({ node }) {\n    let ref = firebase\n      .database()\n      .ref(\n        `/canvas/${ENState.canvasID}/${ENState.canvasOwnerID}/nodes/${node._fid}`\n      )\n\n    ref.set(node.data)\n  }\n\n  static removeCodeBlockByID({ nodeID }) {\n    let ref = firebase\n      .database()\n      .ref(\n        `/canvas/${ENState.canvasID}/${ENState.canvasOwnerID}/nodes/${nodeID}`\n      )\n\n    ref.remove()\n  }\n\n  static addLink({ input, output }) {\n    let ref = firebase\n      .database()\n      .ref(`/canvas/${ENState.canvasID}/${ENState.canvasOwnerID}/connections`)\n\n    let newItem = ref.push()\n\n    newItem.set({\n      _id: getID(),\n      input,\n      output\n    })\n  }\n\n  static removeLinkByID({ linkID }) {\n    let ref = firebase\n      .database()\n      .ref(\n        `/canvas/${ENState.canvasID}/${ENState.canvasOwnerID}/connections/${linkID}`\n      )\n\n    ref.remove()\n  }\n\n  static removeCurrentNodeAndConnections() {\n    let nodeIDFire = ENState.currentEditNodeID\n\n    let node = ENState.nodes.find((e) => e._fid === nodeIDFire)\n    if (node) {\n      let nodeID = node.data._id\n\n      let connIDs = ENState.connections\n        .filter((conn) => {\n          if (conn.data.input.nodeID === nodeID) {\n            return true\n          }\n          if (conn.data.output.nodeID === nodeID) {\n            return true\n          }\n        })\n        .map((e) => e._fid)\n\n      connIDs.forEach((id) => {\n        ENMethods.removeLinkByID({ linkID: id })\n      })\n\n      ENMethods.removeCodeBlockByID({\n        nodeID: nodeIDFire\n      })\n\n      ENState.currentEditNodeID = false\n    }\n  }\n}\n\n//\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { ENState } from './ENState'\nimport { ENMethods } from './ENMethods'\n\nexport function ENHtml({ codes = [] }) {\n  ENState.makeKeyReactive('overlay')\n\n  useEffect(() => {\n    let h = (e) => {\n      if (e.key.toLowerCase() === 'escape') {\n        ENState.overlay = ''\n      }\n    }\n\n    window.addEventListener('keydown', h)\n    return () => {\n      window.removeEventListener('keydown', h)\n    }\n  })\n\n  return ENState.overlay ? (\n    <div\n      style={{\n        position: 'fixed',\n        zIndex: '20',\n        top: '0px',\n        left: '0px',\n        width: `100%`,\n        backgroundColor: 'rgba(255,255,255,0.92)'\n      }}\n    >\n      {ENState.overlay === 'main' && <MainPanel codes={codes}></MainPanel>}\n\n      {ENState.overlay === 'node' && <NodePanel codes={codes}></NodePanel>}\n\n      {ENState.overlay === 'addCodeBlock' && (\n        <div\n          style={{\n            width: `100%`,\n            position: 'absolute',\n            top: `0px`,\n            left: `0px`,\n            backgroundColor: 'rgba(255,255,255,0.95)'\n          }}\n        >\n          <div\n            style={{ width: `100%`, backgroundColor: 'rgba(40,255,40,1.0)' }}\n            className='bg-green-400'\n          >\n            <div\n              style={{\n                width: `100%`,\n                padding: '15px',\n                fontSize: '30px',\n                fontFamily: 'Arial'\n              }}\n            >\n              <div\n                style={{\n                  width: `100%`\n                }}\n              >\n                Click on Floor to Add\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {ENState.overlay && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '20px',\n            right: '20px',\n            zIndex: 10\n          }}\n        >\n          <svg\n            width='24'\n            height='24'\n            xmlns='http://www.w3.org/2000/svg'\n            fillRule='evenodd'\n            clipRule='evenodd'\n            fill='black'\n            onClick={() => {\n              ENState.overlay = ''\n            }}\n            onPointerDown={() => {\n              ENState.overlay = ''\n            }}\n            style={{\n              cursor: 'pointer'\n            }}\n          >\n            <path d='M12 11.293l10.293-10.293.707.707-10.293 10.293 10.293 10.293-.707.707-10.293-10.293-10.293 10.293-.707-.707 10.293-10.293-10.293-10.293.707-.707 10.293 10.293z' />\n          </svg>\n        </div>\n      )}\n    </div>\n  ) : (\n    <div></div>\n  )\n}\n\n// title: path.basename(key),\n// loader: () => r(key)\nfunction MainPanel({ codes = [] }) {\n  let nodesTemplates = codes\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n        top: '0px',\n        left: '0px',\n        backgroundColor: 'rgba(255,255,255,0.92)'\n      }}\n    >\n      {/*  */}\n      <div\n        style={{\n          backgroundColor: 'rgba(255,255,0,0.92)'\n        }}\n      >\n        <div\n          style={{\n            padding: '15px',\n            fontSize: '30px',\n            fontFamily: 'Arial'\n          }}\n        >\n          <div>Getting Started</div>\n        </div>\n      </div>\n\n      <div\n        style={{\n          padding: '15px',\n          fontSize: '20px',\n          fontFamily: 'Arial'\n        }}\n      >\n        <div>Add New CodeBlock</div>\n      </div>\n\n      {nodesTemplates.map((e) => {\n        return (\n          <div\n            key={e.title}\n            style={{\n              marginLeft: '15px',\n              marginBottom: '15px',\n              textDecoration: 'underline'\n            }}\n          >\n            <div\n              style={{ cursor: 'pointer' }}\n              onPointerDown={() => {\n                ENState.addNodeTitle = e.title\n                ENState.hovering = 'floor'\n                ENState.cursorMode = 'addCodeBlock'\n                ENState.overlay = 'addCodeBlock'\n              }}\n            >\n              {e.title}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n// title: path.basename(key),\n// loader: () => r(key)\nfunction NodePanel({ codes = [] }) {\n  let nodesTemplates = codes\n\n  let { node, outputLinks, inputLinks } = useMemo(() => {\n    let fireNodeID = ENState.currentEditNodeID\n    let node = ENState.nodes.find((e) => e._fid === fireNodeID)\n    let inputLinks = []\n    let outputLinks = []\n\n    if (node) {\n      let nodeID = node.data._id\n\n      inputLinks = ENState.connections.filter((conn) => {\n        if (conn.data.input.nodeID === nodeID) {\n          return true\n        }\n      })\n\n      outputLinks = ENState.connections.filter((conn) => {\n        if (conn.data.output.nodeID === nodeID) {\n          return true\n        }\n      })\n    }\n\n    return {\n      node,\n      inputLinks,\n      outputLinks\n    }\n  })\n\n  let [, reload] = useState(0)\n  let [title, setTitle] = useState(node.data.title)\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n        top: '0px',\n        left: '0px',\n        backgroundColor: 'rgba(255,255,255,0.92)'\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: 'lightblue'\n        }}\n      >\n        <div\n          style={{\n            padding: '15px',\n            fontSize: '30px',\n            fontFamily: 'Arial'\n          }}\n        >\n          <div>Node Settings</div>\n        </div>\n      </div>\n\n      <div\n        style={{\n          padding: '15px',\n          fontSize: '20px',\n          fontFamily: 'Arial'\n        }}\n      >\n        <div>\n          Node using logic:{' '}\n          <div\n            style={{\n              borderColor: 'black',\n              display: 'inline-block',\n              border: 'black solid 1px'\n            }}\n          >\n            <select\n              style={{ appearance: 'none', width: '100%', height: '100%' }}\n              value={title}\n              onChange={({ target: { value } }) => {\n                node.data.title = value\n                ENMethods.saveCodeBlock({ node })\n                setTitle(value)\n              }}\n            >\n              {nodesTemplates.map((t, i) => {\n                return (\n                  <option key={i + t.title} value={t.title}>\n                    {t.title}\n                  </option>\n                )\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {inputLinks.length > 0 && (\n        <div\n          style={{\n            padding: '15px',\n            fontSize: '23px',\n            fontFamily: 'Arial'\n          }}\n        >\n          <div style={{ cursor: 'pointer' }}>Inputs</div>\n        </div>\n      )}\n\n      {inputLinks.map((e) => {\n        let localID = e.data.input._id\n        let idx = node.data.inputs.findIndex((e) => e._id === localID)\n\n        let socket = node.data.inputs.find((e) => e._id === localID)\n        let remoteNode = ENState.nodes.find((e) => e.data._id === socket.nodeID)\n        return (\n          <div\n            key={e._fid}\n            style={{\n              marginLeft: '15px',\n              marginBottom: '15px',\n              textDecoration: 'underline'\n            }}\n          >\n            <div\n              style={{ cursor: 'pointer' }}\n              onPointerDown={(ev) => {\n                if (ev.currentTarget.style.color === 'red') {\n                  //\n                  ENMethods.removeLinkByID({ linkID: e._fid })\n                  reload((s) => s + 1)\n                }\n                ev.currentTarget.style.color = 'red'\n              }}\n            >\n              {/*  */}\n              Remove Input at label \"{idx}\"{' '}\n              {remoteNode.data.title && (\n                <span>which is conncted to \"{remoteNode.data.title}\"</span>\n              )}\n            </div>\n          </div>\n        )\n      })}\n\n      {outputLinks.length > 0 && (\n        <div\n          style={{\n            padding: '15px',\n            fontSize: '23px',\n            fontFamily: 'Arial'\n          }}\n        >\n          <div style={{ cursor: 'pointer' }}>Outputs</div>\n        </div>\n      )}\n\n      {outputLinks.map((e) => {\n        let localID = e.data.output._id\n        let idx = node.data.outputs.findIndex((e) => e._id === localID)\n\n        let socket = node.data.outputs.find((e) => e._id === localID)\n        let remoteNode = ENState.nodes.find((e) => e.data._id === socket.nodeID)\n\n        return (\n          <div\n            key={e._fid}\n            style={{\n              marginLeft: '15px',\n              marginBottom: '15px',\n              textDecoration: 'underline'\n            }}\n          >\n            <div\n              style={{ cursor: 'pointer' }}\n              onPointerDown={(ev) => {\n                if (ev.currentTarget.style.color === 'red') {\n                  ENMethods.removeLinkByID({ linkID: e._fid })\n                  reload((s) => s + 1)\n                }\n                ev.currentTarget.style.color = 'red'\n              }}\n            >\n              {/*  */}\n              Remove Output at label \"{idx}\"{' '}\n              {remoteNode.data.title && (\n                <span>which is conncted to \"{remoteNode.data.title}\"</span>\n              )}\n            </div>\n          </div>\n        )\n      })}\n\n      <div\n        style={{\n          padding: '15px',\n          fontSize: '23px',\n          fontFamily: 'Arial'\n        }}\n      >\n        <div style={{ cursor: 'pointer' }}>Remove Node & Connections</div>\n      </div>\n\n      <div\n        style={{\n          padding: '15px',\n          textDecoration: 'underline',\n          fontFamily: 'Arial'\n        }}\n      >\n        <div\n          style={{ cursor: 'pointer' }}\n          onPointerDown={() => {\n            if (window.confirm(`remove item`)) {\n              ENMethods.removeCurrentNodeAndConnections()\n              ENState.overlay = ''\n            }\n          }}\n        >\n          Remove\n        </div>\n      </div>\n    </div>\n  )\n}\n\n//\n","// import { useFrame } from \"@react-three/fiber\";\nimport { MapControls } from '@react-three/drei'\nimport { useThree } from '@react-three/fiber'\nimport React, { useEffect, useRef } from 'react'\nimport { ENMethods } from './ENMethods'\nimport { ENState } from './ENState'\n//\n\nexport function ENControls() {\n  let { camera } = useThree()\n\n  let mapControls = useRef()\n\n  useEffect(() => {\n    camera.position.X = 0\n    camera.position.y = 50\n    camera.position.z = 75\n    camera.fov = 45\n    camera.lookAt(0, 0, 0)\n    camera.near = 0.1\n    camera.far = 10000.0\n\n    camera.updateProjectionMatrix()\n  }, [mapControls.current])\n\n  //\n  // ----- ----- ----- ----- -----\n  //\n\n  // ENState.useReactiveKey(\"movementXY\", () => {\n  //   // console.log(ENState.movementXY);\n  // });\n\n  // useFrame(({ raycaster, mouse, camera }) => {\n  //   raycaster.setFromCamera(mouse, camera);\n  // });\n\n  // let { raycaster, scene } = useThree();\n  // let getFloorPt = () => {\n  //   let floor = scene.getObjectByName(\"floor\");\n  //   let found = raycaster.intersectObject(floor);\n  //   let first = found[0];\n  //   if (first) {\n  //     return first.point;\n  //   }\n  // };\n\n  //\n  //\n  //\n\n  let syncCursor = () => {\n    if (ENState.hovering === 'floor') {\n      if (ENState.cursorMode === 'ready') {\n        document.body.style.cursor = 'grab'\n      } else if (ENState.cursorMode === 'pan') {\n        document.body.style.cursor = 'grabbing'\n      } else if (ENState.cursorMode === 'addCodeBlock') {\n        document.body.style.cursor = 'crosshair'\n      }\n    } else if (ENState.hovering === 'object') {\n      document.body.style.cursor = 'pointer'\n    } else if (ENState.hovering === 'overlay') {\n      document.body.style.cursor = ''\n    } else {\n      document.body.style.cursor = ''\n    }\n  }\n\n  ENState.useReactiveKey('overlay', syncCursor)\n  ENState.useReactiveKey('cursorMode', syncCursor)\n  ENState.useReactiveKey('hovering', syncCursor)\n  ENState.useReactiveKey('draggingNodeID', () => {\n    mapControls.current.enabled = !ENState.draggingNodeID\n  })\n  ENState.useReactiveKey('draggingIOID', () => {\n    mapControls.current.enabled = !ENState.draggingIOID\n  })\n\n  let eventsHandlers = {\n    //\n    onPointerDown: ({ point }) => {\n      ENState.isDown = true\n      if (ENState.cursorMode === 'ready') {\n        ENState.cursorMode = 'pan'\n      }\n      if (ENState.cursorMode === 'addCodeBlock') {\n        ENMethods.addCodeBlock({ point })\n      }\n    },\n\n    //\n    onPointerUp: ({ point }) => {\n      ENState.isDown = false\n      if (ENState.cursorMode === 'pan') {\n        ENState.cursorMode = 'ready'\n      }\n\n      setTimeout(() => {\n        if (ENState.draggingIOID) {\n          ENState.draggingIOID = false\n        }\n      }, 100)\n    },\n\n    onPointerEnter: () => {},\n\n    //\n    onPointerMove: (ev) => {\n      ENState.moved++\n      ev.stopPropagation()\n      if (ENState.hovering !== 'floor') {\n        ENState.hovering = 'floor'\n      }\n      ENState.cursorAt.copy(ev.point)\n\n      //\n      //\n      //\n      // console.log(ev);\n      // ENState.movementXY = {\n      //   x: ev.movementX,\n      //   y: ev.movementY,\n      // };\n      //\n      // console.log(ev.movementX, ev.movementY);\n      // ENState.isDown = false;\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\n      'touchstart',\n      (ev) => {\n        ev.preventDefault()\n      },\n      { passive: false }\n    )\n\n    window.addEventListener(\n      'touchmove',\n      (ev) => {\n        ev.preventDefault()\n      },\n      { passive: false }\n    )\n  }, [])\n\n  return (\n    <group>\n      <MapControls\n        //\n        screenSpacePanning={false}\n        // dampingFactor={0.1}\n\n        ref={mapControls}\n      ></MapControls>\n      <mesh\n        visible={false}\n        name='floor'\n        rotation-x={Math.PI * -0.5}\n        {...eventsHandlers}\n      >\n        <planeBufferGeometry args={[1000, 1000, 2, 2]}></planeBufferGeometry>\n\n        <shaderMaterial\n          fragmentShader={/* glsl */ `void main (void) { discard; }`}\n        ></shaderMaterial>\n      </mesh>\n      <gridHelper\n        raycast={() => {}}\n        position-y={0.01}\n        args={[1000, 100, '#232323', '#232323']}\n      ></gridHelper>\n    </group>\n  )\n}\n","/* eslint-disable dot-notation */\nimport { meshBounds, Text } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { Suspense, useRef } from 'react'\n// import { Color } from \"three\";\nimport { MathUtils } from 'three'\nimport { ENState } from './ENState'\n\nexport function Laptop({ ...props }) {\n  const group = useRef()\n\n  // Make it float\n  useFrame((state) => {\n    const t = state.clock.getElapsedTime()\n\n    group.current.rotation.z = MathUtils.lerp(\n      group.current.rotation.z,\n      Math.sin(t / 4) / 20,\n      0.1\n    )\n\n    group.current.position.y = MathUtils.lerp(\n      group.current.position.y,\n      (-5 + Math.sin(t)) / 5,\n      0.1\n    )\n  })\n\n  return (\n    <group\n      raycast={meshBounds}\n      onPointerEnter={() => {\n        //\n        ENState.hovering = 'object'\n      }}\n      onPointerLeave={() => {\n        //\n        ENState.hovering = 'floor'\n      }}\n      //\n      onPointerDown={(e) => {\n        e.stopPropagation()\n        e.target.setPointerCapture(e.pointerId)\n      }}\n      onPointerUp={(e) => {\n        ENState.overlay = 'main'\n        ENState.hovering = 'overlay'\n\n        e.stopPropagation()\n        e.target.releasePointerCapture(e.pointerId)\n      }}\n      ref={group}\n      {...props}\n    >\n      <pointLight position-x={0} position-z={-2} position-y={2}></pointLight>\n      <group rotation-x={Math.PI * 0.0} position={[0, -0.04, 0.41]}>\n        <mesh onClick={() => {}}>\n          <sphereBufferGeometry args={[4, 32, 32]}></sphereBufferGeometry>\n          <meshStandardMaterial\n            metalness={1}\n            roughness={0.3}\n            color='#bababa'\n          ></meshStandardMaterial>\n        </mesh>\n      </group>\n\n      <group position={[0, 7, 1]} rotation-x={Math.PI * -0.25}>\n        <Text\n          color={'#000000'}\n          fontSize={1.5}\n          maxWidth={200}\n          lineHeight={1}\n          textAlign={'center'}\n          anchorX='center'\n          anchorY='middle'\n          outlineWidth={0.12}\n          outlineColor='#ffffff'\n        >{`Click to start`}</Text>\n\n        {/* <Text\n          color={'#000000'}\n          fontSize={1.3}\n          maxWidth={200}\n          lineHeight={1}\n          textAlign={'center'}\n          anchorX='center'\n          anchorY='middle'\n          outlineWidth={0.04}\n          outlineColor='#ffffff'\n        >{`Click to start`}</Text> */}\n      </group>\n    </group>\n  )\n}\n\nexport function ENCore() {\n  //\n  //\n\n  return (\n    <group>\n      <Suspense fallback={null}>\n        <group position-y={3}>\n          <Laptop></Laptop>\n        </group>\n      </Suspense>\n    </group>\n  )\n}\n","import { Text } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { useMemo, useRef } from 'react'\nimport { CatmullRomCurve3, Color, Vector3 } from 'three'\nimport { ENState } from './ENState'\n\nexport function ENDisplayCursor() {\n  ENState.makeKeyReactive('cursorMode')\n\n  let gp = useRef()\n\n  useFrame(() => {\n    if (gp.current) {\n      gp.current.position.lerp(ENState.cursorAt, 0.5)\n    }\n  })\n  return (\n    <group visible={!('ontouchstart' in window)} ref={gp}>\n      {ENState.cursorMode === 'addCodeBlock' && (\n        <group>\n          <mesh position-y={1} rotation-x={Math.PI * 1}>\n            <coneBufferGeometry args={[0.8, 2, 32, 1]}></coneBufferGeometry>\n            <meshStandardMaterial\n              color={'#bababa'}\n              roughness={0.3}\n              metalness={1}\n            ></meshStandardMaterial>\n          </mesh>\n\n          <group rotation-x={Math.PI * -0.25} position-y={3}>\n            <Text\n              color={'#000000'}\n              fontSize={0.7}\n              maxWidth={200}\n              lineHeight={1}\n              textAlign={'center'}\n              anchorX='center'\n              anchorY='middle'\n              outlineWidth={0.04}\n              outlineColor='#ffffff'\n            >{`Click to add`}</Text>\n          </group>\n        </group>\n      )}\n    </group>\n  )\n}\n\nexport const getGeo = ({ a, b, dotted = false }) => {\n  const {\n    LineSegmentsGeometry\n  } = require('three/examples/jsm/lines/LineSegmentsGeometry')\n  const { LineGeometry } = require('three/examples/jsm/lines/LineGeometry')\n\n  const dist = new Vector3().copy(a).distanceTo(b)\n  let raise = dist / 1.6\n  if (raise > 500) {\n    raise = 500\n  }\n  const curvePts = new CatmullRomCurve3(\n    [\n      new Vector3(a.x, a.y - 1, a.z),\n      new Vector3(a.x, a.y - 1 + raise, a.z),\n      new Vector3(b.x, b.y - 1 + raise, b.z),\n      new Vector3(b.x, b.y - 1, b.z)\n    ],\n    false\n  )\n\n  let lineGeo = new LineGeometry()\n  if (dotted) {\n    lineGeo = new LineSegmentsGeometry()\n  }\n  let colors = []\n  let pos = []\n  let count = 100\n  let temp = new Vector3()\n\n  let colorA = new Color()\n  let colorB = new Color('#0000ff')\n\n  for (let i = 0; i < count; i++) {\n    curvePts.getPointAt((i / count) % 1, temp)\n    if (isNaN(temp.x)) {\n      temp.x = 0.0\n    }\n    if (isNaN(temp.y)) {\n      temp.y = 0.0\n    }\n    if (isNaN(temp.z)) {\n      temp.z = 0.0\n    }\n    pos.push(temp.x, temp.y, temp.z)\n    colorA.setStyle('#00ff00')\n    colorA.lerp(colorB, i / count)\n\n    //\n    colorA.offsetHSL(0, 0.5, 0.0)\n    colors.push(colorA.r, colorA.g, colorA.b)\n  }\n\n  lineGeo.setColors(colors)\n\n  lineGeo.setPositions(pos)\n  return lineGeo\n}\n\nexport function ENDisplayConnectorWire() {\n  ENState.makeKeyReactive('draggingIOID')\n\n  const { LineMaterial } = require('three/examples/jsm/lines/LineMaterial')\n  // const { LineGeometry } = require(\"three/examples/jsm/lines/LineGeometry\");\n  const { Line2 } = require('three/examples/jsm/lines/Line2')\n  const lineMat = useMemo(() => {\n    const material = new LineMaterial({\n      transparent: true,\n      color: new Color('#00ffff'),\n      linewidth: 0.0015,\n      opacity: 1.0,\n      dashed: true,\n      vertexColors: false\n    })\n\n    return material\n  }, [])\n\n  let works = useRef({})\n\n  let mesh = useMemo(() => {\n    let cursorPos = new Vector3().copy(ENState.cursorAt)\n    cursorPos.set(1, 1, 1)\n\n    let dragStartPos = new Vector3(1, 1, 1).copy(ENState.dragStartPos)\n\n    let lineGeo = getGeo({ a: cursorPos, b: dragStartPos, dotted: true })\n\n    const mesh = new Line2(lineGeo, lineMat)\n    mesh.computeLineDistances()\n\n    let needsUpdate = false\n    works.current.updateLine = () => {\n      if (\n        ENState.isDown &&\n        !(\n          cursorPos.x === ENState.cursorAt.x &&\n          cursorPos.y === ENState.cursorAt.y &&\n          cursorPos.z === ENState.cursorAt.z\n        )\n      ) {\n        needsUpdate = true\n      }\n      cursorPos.copy(ENState.cursorAt)\n\n      if (needsUpdate) {\n        let lineGeo = getGeo({ a: cursorPos, b: dragStartPos, dotted: true })\n        mesh.geometry = lineGeo\n      }\n    }\n\n    return mesh\n  })\n\n  useFrame(() => {\n    Object.values(works.current).forEach((w) => w())\n  })\n\n  return (\n    <group>\n      {ENState.draggingIOID && <primitive object={mesh}></primitive>}\n    </group>\n  )\n}\n","import { useFrame, useThree } from '@react-three/fiber'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { Color, Vector3 } from 'three'\nimport { getGeo } from './ENDisplayCursor'\n\nexport function ENLink({ link }) {\n  // getGeo()\n\n  const { LineMaterial } = require('three/examples/jsm/lines/LineMaterial')\n  // const { LineGeometry } = require(\"three/examples/jsm/lines/LineGeometry\");\n  const { Line2 } = require('three/examples/jsm/lines/Line2')\n  const lineMat = useMemo(() => {\n    const material = new LineMaterial({\n      transparent: true,\n      color: new Color('#00ffff'),\n      linewidth: 0.0015,\n      opacity: 0.8,\n      dashed: true,\n      vertexColors: true\n    })\n\n    return material\n  }, [])\n  let works = useRef({})\n\n  let { scene } = useThree()\n\n  let mesh = useMemo(() => {\n    let inputV3 = new Vector3()\n    let outputV3 = new Vector3()\n\n    let lineGeo = getGeo({ a: inputV3, b: outputV3 })\n\n    const mesh = new Line2(lineGeo, lineMat)\n    mesh.computeLineDistances()\n\n    return mesh\n  }, [])\n\n  useEffect(() => {\n    let inputV3 = new Vector3()\n    let outputV3 = new Vector3()\n\n    let sig = 0\n    works.current.updateLine = () => {\n      // docs _id\n      let inputO3 = scene.getObjectByName(link.data.input._id)\n      let outputO3 = scene.getObjectByName(link.data.output._id)\n\n      if (inputO3 && outputO3) {\n        inputO3.getWorldPosition(inputV3)\n        outputO3.getWorldPosition(outputV3)\n\n        if (sig !== inputV3.length() + outputV3.length()) {\n          sig = inputV3.length() + outputV3.length()\n          let lineGeo = getGeo({ a: inputV3, b: outputV3 })\n          mesh.geometry = lineGeo\n        }\n      }\n    }\n\n    //\n  }, [])\n\n  useFrame(() => {\n    Object.values(works.current).forEach((w) => w())\n  })\n\n  return (\n    <group>\n      <primitive object={mesh}></primitive>\n    </group>\n  )\n}\n","import { meshBounds, Text } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\nimport React, { useRef } from 'react'\nimport { Color, Vector3 } from 'three'\nimport { ENMethods } from './ENMethods'\nimport { ENState } from './ENState'\n\nlet MyIO = ({ idx, io = 'input', node, socket, e, total }) => {\n  let v3 = new Vector3()\n  let v3b = new Vector3()\n\n  let orbit = 6\n  let radius = 1\n\n  let theta = e * -Math.PI\n\n  if (io === 'output') {\n    theta = Math.PI * e\n  }\n\n  theta -= (0.5 * (Math.PI * 2)) / total\n  theta += Math.PI * 1.5\n\n  v3.setFromCylindricalCoords(orbit, theta, 0)\n  v3b.setFromCylindricalCoords(orbit + 4.5, theta, 0)\n\n  let scan = () => {\n    if (\n      ENState.draggingIOID &&\n      ENState.draggingIOID.socket._id !== socket._id &&\n      ENState.draggingIOID.node._fid !== node._fid &&\n      ENState.draggingIOID.socket.type !== socket.type\n    ) {\n      //\n      let pair = [{ node, socket }, { ...ENState.draggingIOID }]\n      let input = pair.find((e) => e.socket.type === 'input')\n      let output = pair.find((e) => e.socket.type === 'output')\n\n      console.log(input, output)\n      // console.log(input, output);\n      if (input && output) {\n        return { input, output }\n      }\n    }\n  }\n\n  return (\n    //\n    <group>\n      <mesh\n        position-y={0}\n        name={socket._id}\n        onPointerDown={(e) => {\n          e.stopPropagation()\n          e.target.setPointerCapture(e.pointerId)\n\n          ENState.isDown = true\n          ENState.draggingIOID = {\n            socket: JSON.parse(JSON.stringify(socket)),\n            node: JSON.parse(JSON.stringify(node))\n          }\n          ENState.dragStartPos.copy(ENState.cursorAt)\n        }}\n        //\n        onPointerMove={({ eventObject }) => {\n          eventObject.material.emissive = new Color('#323232')\n          eventObject.material.needsUpdate = true\n        }}\n        onPointerEnter={({ eventObject }) => {\n          eventObject.material.emissive = new Color('#323232')\n          eventObject.material.needsUpdate = true\n        }}\n        onPointerLeave={({ eventObject }) => {\n          eventObject.material.emissive = new Color('#000000')\n          eventObject.material.needsUpdate = true\n        }}\n        //\n        onPointerUp={(e) => {\n          e.stopPropagation()\n          e.target.releasePointerCapture(e.pointerId)\n          // ENMethods.saveCodeBlock({ node });\n\n          let res = scan()\n\n          if (res) {\n            ENMethods.addLink({\n              input: res.input.socket,\n              output: res.output.socket\n            })\n          }\n\n          ENState.isDown = false\n          ENState.draggingIOID = false\n        }}\n        //\n        position={v3.toArray()}\n        userData={socket}\n      >\n        {/* <boxBufferGeometry\n        args={[radius * 1.5, radius * 1.5, radius * 1.5]}\n      ></boxBufferGeometry> */}\n        <sphereBufferGeometry args={[radius, 20, 20]}></sphereBufferGeometry>\n        <meshStandardMaterial\n          metalness={1}\n          roughness={0.3}\n          color={io === 'input' ? 'green' : 'blue'}\n        ></meshStandardMaterial>\n      </mesh>\n\n      <group position={v3b.toArray()}>\n        <group\n          position-z={io === 'input' ? -0.1 : 0.1}\n          rotation-x={Math.PI * -0.25}\n        >\n          <Text\n            color={'#000000'}\n            fontSize={1.5}\n            maxWidth={200}\n            lineHeight={1}\n            textAlign={'center'}\n            anchorX='center'\n            anchorY='middle'\n            outlineWidth={0.12}\n            outlineColor='#ffffff'\n          >{`${idx}`}</Text>\n        </group>\n      </group>\n    </group>\n  )\n}\n\nexport function ENNode({ node }) {\n  let radius = 2.75\n  let gp = useRef()\n\n  useFrame(() => {\n    if (gp.current) {\n      if (ENState.draggingNodeID === node.data._id) {\n        node.data.position = ENState.cursorAt.toArray()\n      }\n      gp.current.position.fromArray(node.data.position)\n    }\n  })\n\n  return (\n    <group position-y={radius}>\n      <group ref={gp}>\n        <group position-z={18} position-y={0} rotation-x={Math.PI * -0.25}>\n          <Text\n            color={'#000000'}\n            fontSize={1.5}\n            maxWidth={200}\n            lineHeight={1}\n            textAlign={'center'}\n            anchorX='center'\n            anchorY='middle'\n            outlineWidth={0.12}\n            outlineColor='#ffffff'\n          >{`${node.data.title}`}</Text>\n        </group>\n\n        <group>\n          <mesh\n            raycast={meshBounds}\n            onPointerDown={(e) => {\n              ENState.isDown = true\n              ENState.draggingNodeID = node.data._id\n              ENState.moved = 0\n            }}\n            onPointerUp={(e) => {\n              ENState.isDown = false\n              ENState.draggingNodeID = false\n              ENMethods.saveCodeBlock({ node })\n\n              if (ENState.moved <= 10) {\n                ENState.currentEditNodeID = node._fid\n                ENState.overlay = 'node'\n              }\n              ENState.moved = 0\n            }}\n          >\n            <sphereBufferGeometry\n              args={[radius, 32, 32]}\n            ></sphereBufferGeometry>\n            <meshStandardMaterial\n              metalness={1}\n              roughness={0.3}\n            ></meshStandardMaterial>\n          </mesh>\n        </group>\n\n        <group position-z={-1.11}>\n          {node.data.inputs.map((e, idx, arr) => {\n            //\n            //\n\n            return (\n              <MyIO\n                key={e._id}\n                socket={e}\n                node={node}\n                idx={idx}\n                e={(idx + 0) / arr.length}\n                total={node.data.inputs.length + node.data.outputs.length}\n              ></MyIO>\n            )\n          })}\n        </group>\n\n        <group position-z={1.11}>\n          {node.data.outputs.map((e, idx, arr) => {\n            //\n            //\n\n            return (\n              <MyIO\n                io={'output'}\n                key={e._id}\n                socket={e}\n                node={node}\n                idx={idx}\n                e={(idx + 1) / arr.length}\n                total={node.data.inputs.length + node.data.outputs.length}\n              ></MyIO>\n            )\n          })}\n        </group>\n      </group>\n    </group>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { ENLink } from './ENLink'\nimport { ENNode } from './ENNode'\nimport { ENState } from './ENState'\nimport { firebase } from './firebase'\n\nexport function ENDisplayNodes() {\n  let [nodes, setNodes] = useState([])\n\n  ENState.makeKeyReactive('canvasOwnerID')\n  ENState.makeKeyReactive('canvasID')\n\n  let canvasID = ENState.canvasID\n  let canvasOwnerID = ENState.canvasOwnerID\n  useEffect(() => {\n    if (!canvasID) {\n      return () => {}\n    }\n\n    if (!canvasOwnerID) {\n      return () => {}\n    }\n\n    //\n    let unsusbs = firebase\n      .database()\n      .ref(`/canvas/${canvasID}/${canvasOwnerID}/nodes`)\n      .on('value', (snap) => {\n        if (snap) {\n          let arr = []\n\n          let val = snap.val()\n          for (let kn in val) {\n            arr.push({\n              _fid: kn,\n              data: val[kn]\n            })\n          }\n          ENState.nodes = arr\n\n          setNodes(arr)\n        }\n      })\n    return () => {\n      unsusbs()\n    }\n  }, [canvasID, canvasOwnerID])\n\n  return (\n    <group>\n      {nodes.map((node) => {\n        return <ENNode key={node._fid} node={node}></ENNode>\n      })}\n    </group>\n  )\n}\n\nexport function ENDisplayLinks() {\n  let [links, setLinks] = useState([])\n\n  ENState.makeKeyReactive('canvasOwnerID')\n  ENState.makeKeyReactive('canvasID')\n\n  let canvasID = ENState.canvasID\n  let canvasOwnerID = ENState.canvasOwnerID\n  useEffect(() => {\n    if (!canvasID) {\n      return () => {}\n    }\n    if (!canvasOwnerID) {\n      return () => {}\n    }\n\n    //\n    return firebase\n      .database()\n      .ref(`/canvas/${canvasID}/${canvasOwnerID}/connections`)\n      .on('value', (snap) => {\n        if (snap) {\n          let arr = []\n\n          let val = snap.val()\n\n          for (let kn in val) {\n            arr.push({\n              _fid: kn,\n              data: val[kn]\n            })\n          }\n\n          ENState.connections = arr\n\n          setLinks(arr)\n        }\n      })\n  }, [canvasID, canvasOwnerID])\n\n  return (\n    <group>\n      {links.map((link) => {\n        return <ENLink key={link._fid} link={link}></ENLink>\n      })}\n    </group>\n  )\n}\n","import {\n  WebGLCubeRenderTarget,\n  Camera,\n  Scene,\n  Mesh,\n  PlaneBufferGeometry,\n  ShaderMaterial,\n  CubeRefractionMapping,\n  BackSide,\n  NoBlending,\n  BoxBufferGeometry,\n  CubeCamera,\n  Color,\n  LinearMipmapLinearFilter,\n  Vector2,\n  MeshBasicMaterial,\n  DoubleSide,\n  RGBFormat,\n  LinearFilter,\n  CubeReflectionMapping,\n  WebGLRenderTarget,\n  EquirectangularReflectionMapping,\n  sRGBEncoding\n} from 'three'\n\n// import { cloneUniforms } from \"three/src/renderers/shaders/UniformsUtils.js\";\n// import * as dat from '';\n\nclass CustomWebGLCubeRenderTarget extends WebGLCubeRenderTarget {\n  constructor(width, height, options) {\n    super(width, height, options)\n    this.ok = true\n  }\n\n  setup(renderer, texture) {\n    this.texture.type = texture.type\n    this.texture.format = texture.format\n    this.texture.encoding = texture.encoding\n\n    var scene = new Scene()\n\n    var shader = {\n      uniforms: {\n        tEquirect: { value: null }\n      },\n\n      vertexShader: `\n        varying vec3 vWorldDirection;\n        vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n          return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n        }\n        void main() {\n          vWorldDirection = transformDirection( position, modelMatrix );\n          #include <begin_vertex>\n          #include <project_vertex>\n        }\n      `,\n\n      fragmentShader: `\n        uniform sampler2D tEquirect;\n        varying vec3 vWorldDirection;\n        #define RECIPROCAL_PI 0.31830988618\n        #define RECIPROCAL_PI2 0.15915494\n        void main() {\n          vec3 direction = normalize( vWorldDirection );\n          vec2 sampleUV;\n          sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n          sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n          gl_FragColor = texture2D( tEquirect, sampleUV );\n        }\n      `\n    }\n\n    var material = new ShaderMaterial({\n      type: 'CubemapFromEquirect',\n      uniforms: shader.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      side: BackSide,\n      blending: NoBlending\n    })\n\n    material.uniforms.tEquirect.value = texture\n\n    var mesh = new Mesh(new BoxBufferGeometry(5, 5, 5), material)\n    scene.add(mesh)\n\n    // var cubeRtt = new WebGLCubeRenderTarget(this.width, {format: RGBFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter });\n    var camera = new CubeCamera(1, 100000, this)\n\n    camera.renderTarget = this\n    camera.renderTarget.texture.name = 'CubeCameraTexture'\n\n    camera.update(renderer, scene)\n\n    this.compute = () => {\n      camera.update(renderer, scene)\n    }\n\n    // mesh.geometry.dispose()\n    // mesh.material.dispose()\n  }\n}\n\nexport class ShaderCubeChrome {\n  constructor({ renderer, res = 128, color = new Color('#ffffff') }) {\n    // this.onLoop = ctx.onLoop\n    // console.log(renderer)\n    this.renderer = renderer\n    this.resX = res\n    this.renderTargetCube = new CustomWebGLCubeRenderTarget(this.resX, {\n      format: RGBFormat,\n      generateMipmaps: true,\n      magFilter: LinearFilter,\n      minFilter: LinearMipmapLinearFilter\n    })\n    this.renderTargetPlane = new WebGLRenderTarget(this.resX, this.resX, {\n      format: RGBFormat,\n      generateMipmaps: true,\n      magFilter: LinearFilter,\n      minFilter: LinearMipmapLinearFilter\n    })\n    this.camera = new Camera()\n    this.scene = new Scene()\n    this.geo = new PlaneBufferGeometry(2, 2, 2, 2)\n    let uniforms = {\n      time: {\n        value: 0\n      },\n      resolution: {\n        value: new Vector2(this.resX, this.resX)\n      },\n      diffuse: {\n        value: color\n      }\n    }\n\n    this.mat = new ShaderMaterial({\n      side: DoubleSide,\n      transparent: true,\n      uniforms,\n      vertexShader: `\n        void main (void) {\n          gl_Position = vec4( position, 1.0 );\n        }\n      `,\n      fragmentShader: `\n        #include <common>\n          uniform vec2 resolution;\n          uniform float time;\n          uniform vec3 diffuse;\n\n          const mat2 m = mat2( 0.80,  0.60, -0.60,  0.80 );\n\n          float noise( in vec2 p ) {\n            return sin(p.x)*sin(p.y);\n          }\n\n          float fbm4( vec2 p ) {\n              float f = 0.0;\n              f += 0.5000 * noise( p ); p = m * p * 2.02;\n              f += 0.2500 * noise( p ); p = m * p * 2.03;\n              f += 0.1250 * noise( p ); p = m * p * 2.01;\n              f += 0.0625 * noise( p );\n              return f / 0.9375;\n          }\n\n          float fbm6( vec2 p ) {\n              float f = 0.0;\n              f += 0.500000*(0.5 + 0.5 * noise( p )); p = m*p*2.02;\n              f += 0.250000*(0.5 + 0.5 * noise( p )); p = m*p*2.03;\n              f += 0.125000*(0.5 + 0.5 * noise( p )); p = m*p*2.01;\n              f += 0.062500*(0.5 + 0.5 * noise( p )); p = m*p*2.04;\n              f += 0.031250*(0.5 + 0.5 * noise( p )); p = m*p*2.01;\n              f += 0.015625*(0.5 + 0.5 * noise( p ));\n              return f/0.96875;\n          }\n\n          float pattern (vec2 p) {\n            float vout = fbm4( p + time + fbm6(  p + fbm4( p + time )) );\n            return abs(vout);\n          }\n\n          // // Found this on GLSL sandbox. I really liked it, changed a few things and made it tileable.\n          // // :)\n          // // by David Hoskins.\n\n\n          // // Water turbulence effect by joltz0r 2013-07-04, improved 2013-07-07\n\n\n          // // Redefine below to see the tiling...\n          // //#define SHOW_TILING\n\n          // #define TAU 6.28318530718\n          // #define MAX_ITER 12\n\n          // vec4 waterwaves( in vec2 fragCoord, in vec2 iResolution, in float iTime)\n          // {\n          //   float time = iTime * .5+23.0;\n          //     // uv should be the 0-1 uv of texture...\n          //   vec2 uv = fragCoord.xy / iResolution.xy;\n\n          // #ifdef SHOW_TILING\n          //   vec2 p = mod(uv*TAU*2.0, TAU)-250.0;\n          // #else\n          //     vec2 p = mod(uv*TAU, TAU)-250.0;\n          // #endif\n          //   vec2 i = vec2(p);\n          //   float c = 1.0;\n          //   float inten = .005;\n\n          //   for (int n = 0; n < MAX_ITER; n++)\n          //   {\n          //     float t = time * (1.0 - (3.5 / float(n+1)));\n          //     i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));\n          //     c += 1.0/length(vec2(p.x / (sin(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n          //   }\n          //   c /= float(MAX_ITER);\n          //   c = 1.17-pow(c, 1.4);\n          //   vec3 colour = vec3(pow(abs(c), 12.0));\n          //     colour = clamp(colour + vec3(diffuse), 0.0, 1.0);\n\n\n          //   #ifdef SHOW_TILING\n          //   // Flash tile borders...\n          //   vec2 pixel = 2.0 / iResolution.xy;\n          //   uv *= 2.0;\n\n          //   float f = floor(mod(iTime*.5, 2.0)); \t// Flash value.\n          //   vec2 first = step(pixel, uv) * f;\t\t   \t// Rule out first screen pixels and flash.\n          //   uv  = step(fract(uv), pixel);\t\t\t\t// Add one line of pixels per tile.\n          //   colour = mix(colour, vec3(1.0, 1.0, 0.0), (uv.x + uv.y) * first.x * first.y); // Yellow line\n\n          //   #endif\n          //   return vec4(colour, 1.0);\n          // }\n\n          void main (void) {\n            vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n            // vec4 water = waterwaves(gl_FragCoord.xy, vec2(resolution.xy), time * 0.05);\n\n            gl_FragColor = vec4(vec3(\n              0.35 + pattern(uv * 1.70123 + -0.17 * cos(time * 0.05)),\n              0.35 + pattern(uv * 1.70123 +  0.0 * cos(time * 0.05)),\n              0.35 + pattern(uv * 1.70123 +  0.17 * cos(time * 0.05))\n            ) * diffuse, 1.0);\n\n            // gl_FragColor.rgb *= gl_FragColor.rgb;\n            // gl_FragColor = water;\n          }\n      `\n    })\n\n    this.renderTargetPlane.texture.encoding = sRGBEncoding\n    this.renderTargetPlane.texture.mapping = EquirectangularReflectionMapping\n    // this.renderTargetCube.texture.mapping = CubeReflectionMapping\n    this.renderTargetCube.texture.mapping = CubeRefractionMapping\n    this.renderTargetCube.texture.mapping = CubeReflectionMapping\n    this.renderTargetCube.texture.encoding = sRGBEncoding\n\n    this.renderTargetCube.setup(this.renderer, this.renderTargetPlane.texture)\n\n    this.compute = ({ time, computeEnvMap = true }) => {\n      uniforms.time.value = time || window.performance.now() * 0.0001\n      let camera = this.camera\n      let renderer = this.renderer\n      let scene = this.scene\n\n      // let renderTarget = this.renderTarget\n      // var generateMipmaps = renderTargetCube.texture.generateMipmaps\n      // renderTargetCube.texture.generateMipmaps = false\n\n      renderer.setRenderTarget(this.renderTargetPlane)\n      renderer.render(scene, camera)\n      renderer.setRenderTarget(null)\n\n      if (computeEnvMap) {\n        this.renderTargetCube.compute()\n      }\n    }\n\n    this.plane = new Mesh(this.geo, this.mat)\n    this.out = {\n      texture: this.renderTargetPlane.texture,\n      envMap: this.renderTargetCube.texture,\n      material: new MeshBasicMaterial({\n        color: 0xffffff,\n        side: DoubleSide,\n        envMap: this.renderTargetCube.texture\n      })\n    }\n    this.scene.add(this.plane)\n  }\n}\n","import { useMemo } from 'react'\nimport { useFrame, useThree } from '@react-three/fiber'\nimport { Color } from 'three'\nimport { ShaderCubeChrome } from './ShaderCubeChrome'\nexport function EnvRender() {\n  let { get } = useThree()\n\n  let rainbow = useMemo(() => {\n    let rainbow = new ShaderCubeChrome({\n      renderer: get().gl,\n      res: 64,\n      color: new Color('#ffffff')\n    })\n\n    rainbow.compute({ time: 0.54, computeEnvMap: true })\n\n    get().scene.environment = rainbow.out.envMap\n    return rainbow\n  }, [])\n\n  let time = 0\n  useFrame((st, dt) => {\n    if (dt >= 1 / 30) {\n      dt = 1 / 30\n    }\n    time += dt\n    rainbow.compute({ time: time, computeEnvMap: true })\n  })\n\n  return null\n}\n","import React from 'react'\n\n//\nimport { ENControls } from './ENControls'\n\n//\nimport { ENCore } from './ENCore'\n// import { ENHDRI as ENHdri } from './ENHDRI'\nimport { ENDisplayConnectorWire, ENDisplayCursor } from './ENDisplayCursor'\nimport { ENDisplayLinks, ENDisplayNodes } from './ENDisplayNodes'\nimport { EnvRender } from './EnvRender'\n\n// ENState\nexport function GraphEditorContent() {\n  return (\n    <group>\n      {/*  */}\n      <ENControls></ENControls>\n\n      {/* <ENHdri></ENHdri> */}\n\n      <ENCore></ENCore>\n\n      <ENDisplayNodes></ENDisplayNodes>\n      <ENDisplayLinks></ENDisplayLinks>\n\n      <ENDisplayCursor></ENDisplayCursor>\n\n      <ENDisplayConnectorWire></ENDisplayConnectorWire>\n\n      <EnvRender></EnvRender>\n\n      <ambientLight intensity={0.87}></ambientLight>\n      <directionalLight\n        position={[10, 10, 0]}\n        intensity={0.87}\n      ></directionalLight>\n      <ambientLight position={[10, 10, -10]} intensity={0.87}></ambientLight>\n    </group>\n  )\n}\n","import { useEffect } from 'react'\nimport { useThree } from '@react-three/fiber'\n\nexport function Resizer({ resize, setOKSize }) {\n  let three = useThree()\n\n  useEffect(() => {\n    if (resize.current) {\n      resize.current.style.width = `${window.innerWidth}px`\n      resize.current.style.height = `${window.innerHeight}px`\n    }\n    setTimeout(() => {\n      setOKSize(true)\n    })\n  }, [three, three?.size?.width, three?.size?.height, resize.current])\n\n  return null\n}\n","import React, { useEffect } from 'react'\nimport { loginGoogle, setupFirebase, firebase } from '../editor/firebase'\nexport function LoginPage({ done, firebaseConfig }) {\n  return (\n    <div\n      style={{\n        width: `${window.innerWidth}px`,\n        height: `${window.innerHeight}px`,\n        display: `flex`,\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative'\n      }}\n    >\n      <LoginWithGoogle\n        firebaseConfig={firebaseConfig}\n        done={done}\n      ></LoginWithGoogle>\n    </div>\n  )\n}\n\nfunction LoginWithGoogle({ done, firebaseConfig }) {\n  //\n  useEffect(() => {\n    setupFirebase({ firebaseConfig })\n    return firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        done(user)\n      }\n    })\n  }, [])\n\n  return (\n    <button\n      style={{\n        cursor: 'pointer',\n        backgroundColor: 'rgba(50,50,255,1.0)',\n        color: 'white',\n        borderRadius: '50px',\n        padding: '20px 25px',\n        appearance: 'none',\n        border: 'none',\n        fontSize: '20px'\n      }}\n      className=' cursor-pointer bg-blue-500 text-white rounded-full px-6 py-3'\n      onClick={() => {\n        loginGoogle()\n      }}\n    >\n      Login With Google\n    </button>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { firebase, setupFirebase } from '../editor/firebase'\nimport { LoginPage } from './LoginPage'\nexport function CanvasChecker({ firebaseConfig, children, canvasID = false }) {\n  let [state, setState] = useState('ready')\n\n  useEffect(() => {\n    let cleans = []\n\n    setupFirebase({ firebaseConfig })\n\n    let clean = firebase.auth().onAuthStateChanged((user) => {\n      //\n      if (canvasID && user) {\n        firebase\n          .database()\n          .ref(`/profile/${user.uid}/canvas/${canvasID}`)\n          .once('value', (snap) => {\n            let val = snap.val()\n            if (val && val.ownerID === user.uid) {\n              setState('show')\n            } else if (val.shareACL[user.uid]) {\n              setState('show')\n            } else {\n              setState('noRights')\n            }\n          })\n      } else {\n        if (user) {\n          setState('show')\n        } else {\n          setState('needsLogin')\n        }\n      }\n    })\n\n    cleans.push(clean)\n\n    return () => {\n      cleans.forEach((s) => s())\n    }\n  }, [])\n\n  return (\n    <span>\n      {state === 'show' && children}\n      {state === 'loading' && (\n        <div style={{ width: '100%', height: '100%' }}>Loading</div>\n      )}\n      {state === 'needsLogin' && (\n        <LoginPage\n          done={() => {\n            //\n            setState('show')\n          }}\n          firebaseConfig={firebaseConfig}\n        ></LoginPage>\n      )}\n      {state === 'noRights' && (\n        <div style={{ width: '100%', height: '100%' }}>No Access Rights.</div>\n      )}\n    </span>\n  )\n}\n\n/*\n//\n{\n  \"rules\": {\n    \".read\": false,\n    \".write\": false,\n\n    \"profile\": {\n      \"$user_id\": {\n        \"canvas\": {\n          \"$canvasID\": {\n            \".read\": \"auth !== null\",\n            \"shareACL\": {\n              \".write\": \"auth !== null && auth.uid === $user_id\",\n            },\n            \"ownerACL\": {\n              \".write\": \"auth !== null && auth.uid === $user_id\",\n            }\n          },\n        }\n      }\n    },\n    \"canvas\": {\n      \"$canvasID\": {\n        \".read\": true,\n        \".write\": \"auth !== null && root.child('profile').child(auth.uid).child('canvas').child('ownerACL').hasChild(auth.uid) || auth !== null && root.child('profile').child(auth.uid).child('canvas').child('ownerACL').hasChild(auth.uid) \"\n      }\n    }\n  }\n}\n*/\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { ENState, waitGet } from '../editor/ENState'\nimport { ENHtml } from '../editor/ENHtmls'\nimport { GraphEditorContent } from '../editor/GraphEditorContent'\nimport { Resizer } from '../editor/Resizer'\nimport { setupFirebase } from '../editor/firebase'\nimport { CanvasChecker } from '../auth/CanvasChecker'\n\nexport const GraphEditorPage = ({\n  canvasID,\n  ownerID,\n  codes = [],\n  firebaseConfig\n}) => {\n  return (\n    <CanvasChecker firebaseConfig={firebaseConfig} canvasID={canvasID}>\n      <GraphEditorApp\n        firebaseConfig={firebaseConfig}\n        canvasID={canvasID}\n        ownerID={ownerID}\n        codes={codes}\n      ></GraphEditorApp>\n    </CanvasChecker>\n  )\n}\n\nexport const GraphEditorApp = ({\n  canvasID,\n  ownerID,\n  codes = [],\n  firebaseConfig\n}) => {\n  let [okFirebase, setOKFirebase] = useState(false)\n  let [okSize, setOKSize] = useState(false)\n  useEffect(() => {\n    ENState.canvasID = canvasID\n    ENState.canvasOwnerID = ownerID\n    ENState.firebaseConfig = firebaseConfig\n\n    waitGet('firebaseConfig').then((firebaseConfig) => {\n      setupFirebase({ firebaseConfig })\n      setOKFirebase(true)\n    })\n  }, [canvasID, ownerID])\n\n  let ref = useRef()\n  return (\n    <div\n      ref={ref}\n      style={{ width: `100%`, height: `100%`, position: 'relative' }}\n    >\n      <Canvas\n        dpr={(typeof window !== 'undefined' && window.devicePixelRatio) || 1.0}\n      >\n        <Resizer setOKSize={setOKSize} resize={ref}></Resizer>\n        {okFirebase && okSize && <GraphEditorContent></GraphEditorContent>}\n      </Canvas>\n\n      {okFirebase && okSize && <ENHtml codes={codes}></ENHtml>}\n\n      {/* {okFirebase && (\n        <div\n          //\n          style={{\n            position: 'absolute',\n            top: `0px`,\n            right: `0px`,\n            zIndex: '1000'\n          }}\n        >\n          <div\n            style={{\n              margin: '12px',\n              padding: '12px 25px',\n              boxShadow: `0px 0px 20px 0px #bababa`,\n              background: 'white',\n              cursor: 'pointer',\n              borderRadius: '50px'\n            }}\n            onClick={() => {\n              //\n              logout()\n            }}\n          >\n            Logout\n          </div>\n        </div>\n      )} */}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { firebase, setupFirebase } from '../editor/firebase'\nimport { LoginPage } from './LoginPage'\nexport function LoginChecker({ firebaseConfig, children }) {\n  let [state, setState] = useState('ready')\n\n  useEffect(() => {\n    let cleans = []\n\n    setupFirebase({ firebaseConfig })\n\n    let clean = firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setState('show')\n      } else {\n        setState('needsLogin')\n      }\n    })\n\n    cleans.push(clean)\n\n    return () => {\n      cleans.forEach((s) => s())\n    }\n  }, [])\n\n  return (\n    <span>\n      {state === 'show' && children}\n      {state === 'loading' && (\n        <div style={{ width: '100%', height: '100%' }}>Loading</div>\n      )}\n      {state === 'needsLogin' && (\n        <LoginPage\n          done={() => {\n            //\n            setState('show')\n          }}\n          firebaseConfig={firebaseConfig}\n        ></LoginPage>\n      )}\n      {state === 'noRights' && (\n        <div style={{ width: '100%', height: '100%' }}>No Access Rights.</div>\n      )}\n    </span>\n  )\n}\n\n/*\n//\n{\n  \"rules\": {\n    \".read\": false,\n    \".write\": false,\n\n    \"profile\": {\n      \"$user_id\": {\n        \"canvas\": {\n          \"$canvasID\": {\n            \".read\": \"auth !== null\",\n            \"shareACL\": {\n              \".write\": \"auth !== null && auth.uid === $user_id\",\n            },\n            \"ownerACL\": {\n              \".write\": \"auth !== null && auth.uid === $user_id\",\n            }\n          },\n        }\n      }\n    },\n    \"canvas\": {\n      \"$canvasID\": {\n        \".read\": true,\n        \".write\": \"auth !== null && root.child('profile').child(auth.uid).child('canvas').child('ownerACL').hasChild(auth.uid) || auth !== null && root.child('profile').child(auth.uid).child('canvas').child('ownerACL').hasChild(auth.uid) \"\n      }\n    }\n  }\n}\n*/\n","import React, { useState } from 'react'\nimport { ENState } from '../editor/ENState'\nimport { onReady } from '../editor/firebase'\n\nexport function ENProjectAdd({ firebaseConfig }) {\n  let [title, setTitle] = useState('New Logic Graph')\n  return (\n    <div\n      style={{\n        padding: '15px',\n        display: `flex`,\n        justifyContent: 'start',\n        alignItems: 'center'\n      }}\n    >\n      <textarea\n        rows={1}\n        style={{\n          padding: '15px',\n          margin: '0px'\n        }}\n        value={title}\n        onInput={(e) => {\n          setTitle(e.target.value)\n        }}\n        onChange={(e) => {\n          setTitle(e.target.value)\n        }}\n      ></textarea>\n      <button\n        style={{\n          padding: '15px',\n          margin: `0px`\n        }}\n        onClick={() => {\n          //\n          onReady({ firebaseConfig }).then(({ db, user }) => {\n            let myCanvasListing = db.ref(`profile/${user.uid}/canvas`)\n            let newItem = myCanvasListing.push()\n            newItem.set({\n              title,\n              ownerID: user.uid,\n              shareACL: {\n                placeholder: false\n              }\n            })\n\n            ENState.listingReload++\n          })\n        }}\n      >\n        Add Logic Graph\n      </button>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { ENState } from '../editor/ENState'\nimport { onReady } from '../editor/firebase'\nimport copy from 'copy-to-clipboard'\n//\nexport function ENProjectListing({ firebaseConfig, onEdit = () => {} }) {\n  //\n  ENState.makeKeyReactive('listing')\n  ENState.makeKeyReactive('listingReload')\n\n  useEffect(() => {\n    onReady({ firebaseConfig }).then(({ user, db }) => {\n      //\n      //\n      let listingRef = db.ref(`profile/${user.uid}/canvas`)\n\n      let load = () => {\n        listingRef.once('value', (snap) => {\n          let val = snap.val()\n          if (val) {\n            let arr = []\n            for (let kn in val) {\n              arr.push({\n                _fid: kn,\n                data: val[kn]\n              })\n            }\n            //\n\n            ENState.listing = arr\n          }\n        })\n      }\n\n      load()\n      ENState.onChange('listingReload', () => {\n        load()\n      })\n    })\n  }, [ENState.listingReload])\n\n  //\n  return (\n    <div style={{ overflowX: 'scroll', marginLeft: '12px' }}>\n      <table>\n        <thead>\n          <tr>\n            <th className='p-3 border  ' colSpan={1}>\n              <span className='w-24 inline-block'></span>Title{' '}\n              <span className='w-24 inline-block'></span>\n            </th>\n            <th className='p-3 border  ' colSpan={1}>\n              <span className='w-3 inline-block'></span>CanvasID{' '}\n              <span className='w-3 inline-block'></span>\n            </th>\n            <th className='p-3 border ' colSpan={3}>\n              Actions\n            </th>\n            {/* <th>JSON</th> */}\n          </tr>\n        </thead>\n\n        <tbody>\n          {ENState.listing.map((e, idx) => {\n            return (\n              <tr key={e._fid}>\n                <td\n                  style={{ padding: '13px 5px' }}\n                  className='p-3 m-3 border bg-white '\n                >\n                  {e.data.title}\n                </td>\n                <td\n                  style={{ padding: '13px 5px' }}\n                  className='p-3 m-3 border bg-white '\n                >\n                  <span\n                    style={{\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => {\n                      copy(e._fid)\n                    }}\n                  >\n                    {e._fid}\n                  </span>\n                </td>\n                <td style={{ padding: '13px 5px' }} className='p-3 border m-0'>\n                  <button\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => {\n                      //\n                      copy(\n                        `\n/* graphTitle: ${e.data.title} */\n/* graphID: ${e._fid} */\n`.trim()\n                      )\n                    }}\n                  >\n                    Copy Code\n                  </button>\n                </td>\n                <td style={{ padding: '13px 5px' }} className='p-3 border m-0'>\n                  <button\n                    style={{ cursor: 'pointer' }}\n                    className=' p-3 px-6 rounded-full bg-yellow-500 text-white'\n                    onClick={() => {\n                      //\n                      let title = e.data.title || 'no title'\n\n                      onReady({ firebaseConfig }).then(({ user, db }) => {\n                        let newTitle = window.prompt(\n                          `Type \"${title}\" to Confirm Removal, theres no restore.`,\n                          `${title}`\n                        )\n\n                        if (newTitle) {\n                          newTitle = (newTitle || '').trim()\n\n                          let listingRef = db.ref(\n                            `profile/${user.uid}/canvas/${e._fid}/title`\n                          )\n                          listingRef.set(newTitle)\n\n                          e.data.title = newTitle\n\n                          ENState.listingReload++\n                        }\n                      })\n                    }}\n                  >\n                    Rename\n                  </button>\n                </td>\n                <td style={{ padding: '13px 5px' }} className='p-3 border m-0'>\n                  <button\n                    style={{ cursor: 'pointer' }}\n                    className=' p-3 px-6 rounded-full bg-blue-500 text-white'\n                    onClick={() => {\n                      //\n                      // router.push(\n                      //   `/effectnode/editor/${e.data.ownerID}/${e._fid}`\n                      // )\n                      onEdit({\n                        title: e.data.title,\n                        ownerID: e.data.ownerID,\n                        canvasID: e._fid\n                      })\n                    }}\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td style={{ padding: '13px 5px' }} className='p-3 border'>\n                  <button\n                    style={{ cursor: 'pointer' }}\n                    className='  p-3 px-6 rounded-full bg-red-500 text-white'\n                    onClick={() => {\n                      //\n                      //\n                      onReady({ firebaseConfig }).then(({ user, db }) => {\n                        let title = e.data.title || 'no title'\n                        if (\n                          (\n                            window.prompt(\n                              `Type \"${title}\" to Confirm Removal, theres no restore.`,\n                              `${title} ______`\n                            ) || ''\n                          ).trim() === title\n                        ) {\n                          let listingRef = db.ref(\n                            `profile/${user.uid}/canvas/${e._fid}`\n                          )\n                          listingRef.remove()\n\n                          ENState.listing.splice(idx, 1)\n                          ENState.listingReload++\n                        }\n                      })\n                    }}\n                  >\n                    Remove\n                  </button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\n//\n\n//\n\n//\n","import React from 'react'\nimport { ENProjectAdd } from './ENProjectAdd'\nimport { ENProjectListing } from './ENProjectListing'\nexport function ProjectListing({ firebaseConfig, onEdit = () => {} }) {\n  return (\n    <div style={{ width: `100%`, backgroundColor: 'white' }}>\n      <div\n        style={{\n          width: '100%',\n          backgroundColor: 'rgba(255,255,255,0.92)'\n        }}\n      >\n        {/*  */}\n        <div\n          style={{\n            backgroundColor: 'rgba(255,255,0,0.92)'\n          }}\n        >\n          <div\n            style={{\n              padding: '15px',\n              fontSize: '35px',\n              fontFamily: 'Arial'\n            }}\n          >\n            <div>Project Listing</div>\n          </div>\n        </div>\n\n        <ENProjectAdd firebaseConfig={firebaseConfig}></ENProjectAdd>\n        <ENProjectListing\n          firebaseConfig={firebaseConfig}\n          onEdit={onEdit}\n        ></ENProjectListing>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { LoginChecker } from '../auth/LoginChecker'\nimport { ProjectListing } from '../projects/ProjectListing'\n\nexport const ProjectListingPage = ({ firebaseConfig }) => {\n  return (\n    <LoginChecker firebaseConfig={firebaseConfig}>\n      <ProjectListing\n        firebaseConfig={firebaseConfig}\n        onEdit={(ev) => {\n          console.log(ev)\n        }}\n      ></ProjectListing>\n    </LoginChecker>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { LoginChecker } from '../auth/LoginChecker'\nimport { logout } from '../editor/firebase'\nimport { ProjectListing } from '../projects/ProjectListing'\nimport { GraphEditorPage } from './GraphEditorPage'\n\nexport const CMSOnePage = ({ firebaseConfig, codes = [] }) => {\n  let [selected, setSelected] = useState(false)\n\n  useEffect(() => {\n    //\n\n    let calc = () => {\n      let json = new URLSearchParams(document.location.search).get('json')\n\n      if (json) {\n        try {\n          let parsed = JSON.parse(json)\n\n          if (parsed && parsed.canvasID && parsed.ownerID) {\n            setSelected(parsed)\n          } else {\n            setSelected(false)\n          }\n        } catch (e) {\n          console.log(e)\n          setSelected(false)\n        }\n      } else {\n        setSelected(false)\n      }\n    }\n\n    let href = ''\n    let tt = setInterval(() => {\n      if (window.location.href !== href) {\n        href = window.location.href\n        calc()\n      }\n    })\n\n    return () => {\n      clearInterval(tt)\n    }\n  }, [])\n\n  return (\n    <LoginChecker firebaseConfig={firebaseConfig}>\n      {!selected && (\n        <ProjectListing\n          firebaseConfig={firebaseConfig}\n          onEdit={(ev) => {\n            setSelected({\n              title: ev.title,\n              ownerID: ev.ownerID,\n              canvasID: ev.canvasID\n            })\n            window.history.pushState(\n              {},\n              'encms',\n              `${window.location.pathname}?json=${encodeURIComponent(\n                JSON.stringify(ev)\n              )}`\n            )\n          }}\n        ></ProjectListing>\n      )}\n      {selected && (\n        <GraphEditorPage\n          firebaseConfig={firebaseConfig}\n          canvasID={selected.canvasID}\n          ownerID={selected.ownerID}\n          codes={codes}\n        ></GraphEditorPage>\n      )}\n      {selected && (\n        <div\n          //\n          style={{\n            position: 'absolute',\n            top: `0px`,\n            left: `0px`,\n            zIndex: '1'\n          }}\n        >\n          <div\n            style={{\n              margin: '12px',\n              padding: '12px 25px',\n              background: 'white',\n              boxShadow: `0px 0px 20px 0px #bababa`,\n              cursor: 'pointer',\n              borderRadius: '50px'\n            }}\n            onClick={() => {\n              //\n              setSelected(false)\n              window.history.pushState(\n                {},\n                'encms',\n                `${window.location.pathname}`\n              )\n            }}\n          >\n            Back\n          </div>\n        </div>\n      )}\n      {selected && (\n        <div\n          //\n          style={{\n            position: 'absolute',\n            bottom: `0px`,\n            right: `0px`,\n            zIndex: '1'\n          }}\n        >\n          <div\n            style={{\n              fontSize: '12px',\n              margin: '7px',\n              padding: '7px 15px',\n              background: 'white',\n              cursor: 'pointer',\n              borderRadius: '50px',\n              border: 'gray solid 1px'\n            }}\n          >\n            ({selected.title})\n          </div>\n        </div>\n      )}\n      {!selected && (\n        <div\n          //\n          style={{\n            position: 'absolute',\n            top: `0px`,\n            right: `0px`,\n            zIndex: '1'\n          }}\n        >\n          <div\n            style={{\n              margin: '12px',\n              padding: '12px 25px',\n              background: 'white',\n              cursor: 'pointer',\n              boxShadow: `0px 0px 20px 0px #bababa`,\n              borderRadius: '50px'\n            }}\n            onClick={() => {\n              //\n              logout()\n            }}\n          >\n            Logout\n          </div>\n        </div>\n      )}\n    </LoginChecker>\n  )\n}\n","import React from 'react'\nimport { CMSOnePage } from 'effectnode-cms'\n\nexport function OnePageDemo() {\n  return (\n    <CMSOnePage firebaseConfig={firebaseConfig} codes={getCodes()}></CMSOnePage>\n  )\n}\n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAPuwK2yMl025KLVTnGDdN34XxHBYQHoVk',\n  authDomain: 'effect-node-by-you.firebaseapp.com',\n  databaseURL: 'https://en-you.firebaseio.com/',\n  projectId: 'effect-node-by-you',\n  storageBucket: 'effect-node-by-you.appspot.com',\n  messagingSenderId: '587774316246',\n  appId: '1:587774316246:web:2a52c46bd184fc3a1d4377',\n  measurementId: 'G-SYFGKL6VNR'\n}\n\nexport const getCodes = () => {\n  let path = require('path')\n  let r = require.context('../vfx-codes', true, /\\.js$/, 'lazy')\n\n  function importAll(r) {\n    let arr = []\n    r.keys().forEach((key) => {\n      let filename = path.basename(key)\n\n      arr.push({\n        title: filename,\n        loader: () => r(key)\n      })\n    })\n\n    return arr\n  }\n  let codes = importAll(r)\n\n  return codes\n}\n","import React from 'react'\n\nimport { GraphEditorPage } from 'effectnode-cms'\n\nexport const GraphEditorPageDemo = () => {\n  return (\n    <GraphEditorPage\n      firebaseConfig={firebaseConfig}\n      canvasID={`-MdBQtfGPXXPkl-NuEoW`}\n      ownerID={`NGpUixuU0NOkOlmLsLuepkaZxxt1`}\n      codes={getCodes()}\n    />\n  )\n}\n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAPuwK2yMl025KLVTnGDdN34XxHBYQHoVk',\n  authDomain: 'effect-node-by-you.firebaseapp.com',\n  databaseURL: 'https://en-you.firebaseio.com/',\n  projectId: 'effect-node-by-you',\n  storageBucket: 'effect-node-by-you.appspot.com',\n  messagingSenderId: '587774316246',\n  appId: '1:587774316246:web:2a52c46bd184fc3a1d4377',\n  measurementId: 'G-SYFGKL6VNR'\n}\n\nexport const getCodes = () => {\n  let path = require('path')\n  let r = require.context('../vfx-codes', true, /\\.js$/, 'lazy')\n\n  function importAll(r) {\n    let arr = []\n    r.keys().forEach((key) => {\n      let filename = path.basename(key)\n\n      arr.push({\n        title: filename,\n        loader: () => r(key)\n      })\n    })\n\n    return arr\n  }\n  let codes = importAll(r)\n\n  return codes\n}\n","import React from 'react'\n\nimport { ProjectListingPage } from 'effectnode-cms'\n\nexport const ProjectListingPageDemo = () => {\n  return <ProjectListingPage firebaseConfig={firebaseConfig} />\n}\n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAPuwK2yMl025KLVTnGDdN34XxHBYQHoVk',\n  authDomain: 'effect-node-by-you.firebaseapp.com',\n  databaseURL: 'https://en-you.firebaseio.com/',\n  projectId: 'effect-node-by-you',\n  storageBucket: 'effect-node-by-you.appspot.com',\n  messagingSenderId: '587774316246',\n  appId: '1:587774316246:web:2a52c46bd184fc3a1d4377',\n  measurementId: 'G-SYFGKL6VNR'\n}\n","import React from 'react'\n\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { OnePageDemo } from './OnePageDemo/OnePageDemo'\n\nimport { GraphEditorPageDemo } from './GraphEditorPageDemo/GraphEditorPageDemo'\nimport { ProjectListingPageDemo } from './ProjectListingPageDemo/ProjectListingPageDemo'\nconst App = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path='/project'>\n          <GraphEditorPageDemo />\n        </Route>\n        <Route path='/listing'>\n          <ProjectListingPageDemo />\n        </Route>\n        <Route path='/'>\n          <OnePageDemo />\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n\n// react-router-dom\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}